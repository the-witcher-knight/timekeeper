version: "3.8"

services:
  app:
    container_name: ${PROJECT_NAME}-app
    image: ${PROJECT_NAME}-app:latest
    ports:
      - "8080:8080"
    restart: no
    depends_on:
      db:
        condition: service_healthy
    environment:
      PROJECT_NAME: "${PROJECT_NAME}"
      ENVIRONMENT: "${ENVIRONMENT}"
      APP_PORT: "8080"
      DB_URL: "postgres://${PROJECT_NAME}:@db:5432/${PROJECT_NAME}?sslmode=disable"
      DB_MAX_OPEN_CONN: 6
      DB_MAX_IDLE_CONN: 2
      SENTRY_DSN: "${SENTRY_DSN}"
      BLOCKCHAIN_NETWORK_HTTP : "${BLOCKCHAIN_NETWORK_HTTP}"
      BLOCKCHAIN_NETWORK_WS : "${BLOCKCHAIN_NETWORK_WS}"
      BLOCKCHAIN_PRIVATE_KEY : "${BLOCKCHAIN_PRIVATE_KEY}"
      BLOCKCHAIN_CONTRACT_ADDRESS : "${BLOCKCHAIN_CONTRACT_ADDRESS}"
      JWT_SECRET: "${JWT_SECRET}"
    volumes:
      - ".:/app"
      - "api-build-cache:/root/.cache/go-build"
    networks:
      - local-network

  db:
    container_name: ${PROJECT_NAME}-db
    image: postgres:11-alpine
    restart: no
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 30s
      timeout: 30s
      retries: 3
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${PROJECT_NAME}
      POSTGRES_HOST_AUTH_METHOD: trust
    networks:
      - local-network

  db-migrate:
    container_name: ${PROJECT_NAME}-db-migrate
    image: migrate/migrate:v4.15.1
    restart: "no"
    environment:
      DB_URL: "postgres://${PROJECT_NAME}:@db:5432/${PROJECT_NAME}?sslmode=disable"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./data/migrations:/migrations
    entrypoint: []
    networks:
      - local-network

  solc:
    container_name: "${PROJECT_NAME}-solc"
    image: "ethereum/solc:0.8.26-alpine"
    working_dir: "/app"
    entrypoint: [ ]
    volumes:
      - ".:/app"
    networks:
      - local-network

  ganache:
    container_name: "${PROJECT_NAME}-ganache"
    image: "trufflesuite/ganache:v7.9.2"
    ports:
      - "8545:8545"
    networks:
      - local-network

networks:
  local-network:

volumes:
  api-build-cache:
    name: ${PROJECT_NAME}-api-build-cache
